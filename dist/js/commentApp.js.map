{"version":3,"sources":["commentApp.js"],"names":["console","log","LOCAL_URL_COMMENT","API_BASE_COMMENT","commentBtns","document","querySelectorAll","postBtn","forEach","comment","addEventListener","userInput","parentElement","querySelector","classList","toggle","send","sendComment","newComment","value","dataset","artist","axios","post","text","then","response","showComments","data","catch","error","btn","comments","commentsUL","innerHTML","showComment","p","createElement","appendChild"],"mappings":";;AAAAA,QAAQC,GAAR,CAAY,yBAAZ;AACA,IAAMC,oBAAoB,+BAA1B;AACA,IAAMC,mBAAmB,oCAAzB;AACA,IAAIC,cAAcC,SAASC,gBAAT,CAA0B,UAA1B,CAAlB;AACAN,QAAQC,GAAR,CAAYG,WAAZ;AACA;AACA,IAAIG,UAAUF,SAASC,gBAAT,CAA0B,OAA1B,CAAd;;AAEA;;;AAIAF,YAAYI,OAAZ,CAAoB,UAASC,OAAT,EAAkB;AACrCA,SAAQC,gBAAR,CAAyB,OAAzB,EAAkC,YAAW;AAC5C,MAAIC,YAAY,KAAKC,aAAL,CAAmBC,aAAnB,CAAiC,aAAjC,CAAhB;AACAF,YAAUG,SAAV,CAAoBC,MAApB,CAA2B,QAA3B;AACA,MAAIC,OAAO,KAAKJ,aAAL,CAAmBC,aAAnB,CAAiC,OAAjC,CAAX;AACAG,OAAKF,SAAL,CAAeC,MAAf,CAAsB,QAAtB;AACA,EALD;AAMA,CAPD;;AAUA;;AAEA,IAAIE,cAAc,SAAdA,WAAc,GAAW;AAC5BjB,SAAQC,GAAR,CAAY,eAAZ;;AAEAD,SAAQC,GAAR,CAAY,qBAAZ,EAAmC,IAAnC;AACAD,SAAQC,GAAR,CAAY,KAAKW,aAAjB;AACA,KAAIM,aAAa,KAAKN,aAAL,CAAmBC,aAAnB,CAAiC,aAAjC,EAAgDM,KAAjE;AACAnB,SAAQC,GAAR,CAAYiB,UAAZ;AACAlB,SAAQC,GAAR,CAAY,2BAAZ,EAAyC,KAAKmB,OAAL,CAAaC,MAAtD;;AAEA;AACAC,OACEC,IADF,CACOrB,oBAAoB,GAApB,GAA0B,KAAKkB,OAAL,CAAaC,MAD9C,EACuD;AACrDG,QAAMN;AAD+C,EADvD,EAIEO,IAJF,CAIO,UAASC,QAAT,EAAmB;AACxB1B,UAAQC,GAAR,CAAY,kBAAZ,EAAgCyB,QAAhC;AACAC,eAAaD,SAASE,IAAtB;AACA,EAPF,EAQEC,KARF,CAQQ,UAASC,KAAT,EAAgB;AACtB9B,UAAQC,GAAR,CAAY,aAAZ,EAA2B6B,KAA3B;AACA,EAVF;AAaA,CAvBD;;AA0BAvB,QAAQC,OAAR,CAAgB,UAASuB,GAAT,EAAc;AAC7BA,KAAIrB,gBAAJ,CAAqB,OAArB,EAA8BO,WAA9B;AACA,CAFD;;AAMA,IAAIU,eAAe,SAAfA,YAAe,CAASK,QAAT,EAAmB;AACrChC,SAAQC,GAAR,CAAY,kBAAZ,EAAgC+B,QAAhC;;AAEA,KAAIC,aAAa5B,SAASQ,aAAT,CAAuB,aAAvB,CAAjB;AACAoB,YAAWC,SAAX,GAAuB,EAAvB;;AAEAF,UAASxB,OAAT,CAAiB,UAAS2B,WAAT,EAAsB;;AAEtCA,cAAY3B,OAAZ,CAAoB,UAAS4B,CAAT,EAAY;AAChC,OAAIlB,aAAab,SAASgC,aAAT,CAAuB,IAAvB,CAAjB;AACAnB,cAAWgB,SAAX,QAA0BE,EAAEZ,IAA5B;AACAxB,WAAQC,GAAR,CAAY,gBAAgBiB,UAA5B;AACAe,cAAWK,WAAX,CAAwBpB,UAAxB;AACC,GALD;AASA,EAXD;AAYA,CAlBD","file":"commentApp.js","sourcesContent":["console.log(\"This is the Comment App\");\nconst LOCAL_URL_COMMENT = 'http://localhost:1337/comment';\nconst API_BASE_COMMENT = 'http://159.89.151.127:1000/comment'\nlet commentBtns = document.querySelectorAll('.comment');\nconsole.log(commentBtns);\n// let commentInput = document.querySelectorAll('input[name=\"user-comment\"]');\nlet postBtn = document.querySelectorAll('.send');\n\n//THIS IS THE NEW COMMENT APP\n\n\n\ncommentBtns.forEach(function(comment) {\n\tcomment.addEventListener('click', function() {\n\t\tlet userInput = this.parentElement.querySelector('.user-input')\n\t\tuserInput.classList.toggle('closed');\n\t\tlet send = this.parentElement.querySelector('.send')\n\t\tsend.classList.toggle('closed');\n\t})\n})\n\n\n//Send Message\n\nlet sendComment = function() {\n\tconsole.log('being clicked')\n\n\tconsole.log(\"clicked send button\", this)\n\tconsole.log(this.parentElement)\n\tlet newComment = this.parentElement.querySelector('.user-input').value;\n\tconsole.log(newComment)\n\tconsole.log(\"send comment for artist: \", this.dataset.artist)\n\n\t// console.log(\"send comment for artist: \", this.getAttribute('data-artist'))\n\taxios\n\t\t.post(LOCAL_URL_COMMENT + \"/\" + this.dataset.artist , {\n\t\t\ttext: newComment\n\t\t})\n\t\t.then(function(response) {\n\t\t\tconsole.log('server responsed', response)\n\t\t\tshowComments(response.data)\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tconsole.log('Not Working', error)\n\t\t})\n\t\n\t\n}\n\t\n\npostBtn.forEach(function(btn) {\n\tbtn.addEventListener('click', sendComment);\n})\n\n\n\nlet showComments = function(comments) {\n\tconsole.log('showing comments', comments)\n\n\tlet commentsUL = document.querySelector('ul.comments');\n\tcommentsUL.innerHTML = '';\n\n\tcomments.forEach(function(showComment) {\n\t\t\n\t\tshowComment.forEach(function(p) {\n\t\tlet newComment = document.createElement('li');\n\t\tnewComment.innerHTML = `${p.text}`\n\t\tconsole.log(\"New Comment\" + newComment);\n\t\tcommentsUL.appendChild( newComment )\n\t\t})\n\t\t\n\n\t\n\t})\n}\n\n\n\n\n\n\n"]}